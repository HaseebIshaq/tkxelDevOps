- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create SSH key pair
      community.aws.ec2_key:
        name: my-key-pair
        region: us-east-1  # Replace with your desired AWS region
        state: present
      register: key_pair

    - name: Save private key
      copy:
        content: "{{ key_pair.key.private_key }}"
        dest: "{{ playbook_dir }}/my-key-pair.pem"
        mode: '0400'

    - name: Provision EC2 instance
      ec2_instance:
        aws_access_key: "{{ ansible_env.AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ ansible_env.AWS_SECRET_ACCESS_KEY }}"
        key_name: my-key-pair
        instance_type: t2.micro  # Replace with your desired instance type
        image_id: ami-0cff7528ff583bf9a  # Replace with your desired AMI ID
        region: us-east-1  # Replace with your desired AWS region
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        tags:
          Name: MyEC2Instance
      register: ec2_instance

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ ec2_instance.instances[0].public_ip }}"
        port: 22
        delay: 10
        timeout: 300

    - name: Configure Docker and Docker Compose
      become: true
      ansible_ssh_private_key_file: "{{ playbook_dir }}/my-key-pair.pem"
      hosts: "{{ ec2_instance.instances[0].public_ip }}"
      tasks:
        - name: Install Docker and Docker Compose
          apt:
            name: "{{ packages }}"
            state: present
          vars:
            packages:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release

        - name: Install Docker's official GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker APT repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
            state: present

        - name: Install Docker
          apt:
            name: docker-ce
            state: present

        - name: Install Docker Compose
          apt:
            name: docker-compose
            state: present

        - name: Start Docker service
          service:
            name: docker
            state: started
            enabled: yes
